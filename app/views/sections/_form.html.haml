= simple_form_for @section do |f|
  - if @section.errors.any?
    #error_explanation
      %h2= "#{pluralize(@section.errors.count, "error")} prohibited this section from being saved:"
      %ul
        - @section.errors.full_messages.each do |msg|
          %li= msg

  .row
    %hr
  .row
    .form-group
      .col-md-8
        %label.string.optional Baggrundsfarve
        .input-group.color{data: {color: "##{@section.bgcolor}", 'color-format' => 'rgb'}}
          = f.input :bgcolor, as: :string, label: false, input_html: {class: 'pick-a-color form-control'}
          .add-on.input-group-addon
            %i.fa.fa-square#picker1{style: "color: ##{@section.bgcolor}; font-size: 20px;"}
  .row
    .form-group
      .col-md-8
        %label.string.optional Tekstfarve
        .input-group.color{data: {color: "##{@section.fontcolor}", 'color-format' => 'rgb'}}
          = f.input :fontcolor, as: :string, label: false, input_html: {class: 'pick-a-color form-control'}
          .add-on.input-group-addon
            %i.fa.fa-square#picker2{style: "color: ##{@section.fontcolor}; font-size: 20px;"}

  .row
    %hr
  .row
    .form-group
      .col-md-8
        = f.input :article, as: :ckeditor, input_html: { ckeditor: { toolbar: 'mini', language: 'da' } }
        = f.input :user_id, as: :hidden, input_html: { value: current_user.id }
        = f.input :page_id, as: :hidden, input_html: { value: params[:page_id] }
        = f.input :id, as: :hidden, input_html: { value: params[:id] } if @section.persisted?
        - if !@section.persisted?
          - page = Page.find(params[:page_id])
          = f.input :order, as: :hidden, input_html: { value: page.sections.count }
      .col-md-4
        %label Sidebar
        =# collection_select :sidebar, :sidebar_id, current_domain.sidebars, :id, :name, { prompt: 'VÃ¦lg en sidebar' }, { class: 'form-control' }
        %label Filer
        = render 'uploads/form' if @section.persisted?
  .row
    %hr
  .row#uploaded
    - @section.uploads.each do |upload|
      .col-md-3
        .alert.alert-info
          %h5
            = link_to upload.title, upload
            = link_to upload_path, method: :delete, confirm: 'Er du sikker?' do
              %i.fa.fa-trash-o
  .row
    %hr
  .row
    .form-group
      .col-md-4.btn-group
        = f.submit 'Gem', class: 'btn btn-primary'
        = link_to 'Tilbage', sections_path, class: 'btn btn-default'
:javascript
  $(function(){
    $('#picker1').colpick({
      layout:'hex',
      submit:0,
      color: $('#section_bgcolor').val(),
      colorScheme:'light',
      onChange:function(hsb,hex,rgb,el,bySetColor) {
        $('#picker1').css('color','#'+hex);
        // Fill the text box just if the color was set using the picker, and not the colpickSetColor function.
        if(!bySetColor) $('#section_bgcolor').val(hex);
      }
    }).keyup(function(){
      $(this).colpickSetColor(this.value);
    });
    $('#picker2').colpick({
      layout:'hex',
      submit:0,
      color: $('#section_fontcolor').val(),
      colorScheme:'light',
      onChange:function(hsb,hex,rgb,el,bySetColor) {
        $('#picker2').css('color','#'+hex);
        // Fill the text box just if the color was set using the picker, and not the colpickSetColor function.
        if(!bySetColor) $('#section_fontcolor').val(hex);
      }
    }).keyup(function(){
      $(this).colpickSetColor(this.value);
    });
  });